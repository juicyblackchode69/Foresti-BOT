################################################################################################################################################################################################
###                                                                                      Foresti 2020                                                                                      ####
################################################################################################################################################################################################
#–ë–∏–±–ª–∏–æ—Ç–µ–∫aaaaaaaaaaa
import configbot
from configbot import admin_id
import time
import telebot
from telebot import types
import pyowm
from colorama import init, Fore
import bs4
import requests
import COVID19Py
################################################################################################################################################################################################
###                                                                                          API                                                                                             ###
################################################################################################################################################################################################
#–¢–æ–∫–µ–Ω —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã  ([–í–ù–ò–ú–ê–ù–ò–ï!!!] –ó–∞ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥. TOKEN. –í —Å–ª—É—á–∞–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ)
# bot = telebot.TeleBot(configbot.TEST)

#–¢–æ–∫–µ–Ω
bot = telebot.TeleBot(configbot.TOKEN)
covid19 = COVID19Py.COVID19()
################################################################################################################################################################################################
###                                                                                         –¢–µ—Ä–∏–º–Ω–∞–ª                                                                                         ###
################################################################################################################################################################################################
def star(call, callans):
    init()
    print(Fore.YELLOW)
    print("\n---------Foresti_CMD---------")
    print(time.ctime(int(time.time())), "\nUSER: @{0}\
                                         \n–ò–º—è: {1}\
                                         \n–§–∞–º–∏–ª–∏—è: {2}\
                                         \nID: {3}\n\
                                         \n–ü–æ—Å—Ç–∞–≤–∏–ª –∑–≤–µ–∑–¥:".format(call.from_user.username, call.from_user.first_name,
                                                                   call.from_user.last_name,
                                                                   str(call.from_user.id)))
    print(callans)
    print("-----------------------------")
    print(Fore.WHITE)

def func(call, ansfunc):
    init()
    print(Fore.CYAN)
    print("\n---------Foresti_CMD---------")
    print(time.ctime(int(time.time())), "\nUSER: @{0}\
                                         \n–ò–º—è: {1}\
                                         \n–§–∞–º–∏–ª–∏—è: {2}\
                                         \nID: {3}\n".format(call.from_user.username, call.from_user.first_name,
                                                                   call.from_user.last_name,
                                                                   str(call.from_user.id)))
    print("->", ansfunc)
    print("-----------------------------")
    print(Fore.WHITE)

def txt(message, answer):
    init()
    print(Fore.GREEN)
    print("\n---------Foresti_CMD---------")
    print(time.ctime(int(time.time())), "\nUSER: @{0}\
                                         \n–ò–º—è: {1}\
                                         \n–§–∞–º–∏–ª–∏—è: {2}\
                                         \nID: {3}\n\
                                         \n–°–æ–æ–±—â–µ–Ω–∏–µ: {4}".format(message.from_user.username,
                                                                   message.from_user.first_name,
                                                                   message.from_user.last_name,
                                                                   str(message.from_user.id),
                                                                   message.text))
    print("->", answer, "<-")
    print("-----------------------------")
    print(Fore.WHITE)
################################################################################################################################################################################################
#–ë–∞–Ω –õ–∏—Å—Ç
banlist = [840599371]
################################################################################################################################################################################################
###                                                                                           –ö–æ–º–∞–Ω–¥—ã                                                                                        ###
################################################################################################################################################################################################
###                                      –ö–æ–º–∞–Ω–¥–∞ /start                                      ###
################################################################################################
@bot.message_handler(commands=['start'])
def welcome(message):
    bot.delete_message(message.chat.id, message.message_id)#–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ

    if message.from_user.id == banlist: #–ë–∞–Ω —é–∑–µ—Ä–æ–≤
        delet = types.ReplyKeyboardRemove()
        file_id = 'CAACAgIAAxkBAAJJa16aMaDA7qpL2prtgpPnZ7vGNVe0AAJ-BQACztjoC9E5b_hSh1A0GAQ'
        bot.send_sticker(message.chat.id, file_id)
        bot.send_message(message.chat.id, '–í–´ –ë–´–õ–ò –ó–ê–ë–ê–ù–ï–ù–´!', reply_markup=delet)
    else:
        print("\n---------Foresti_CMD---------")                                                                #–¢–µ—Ä–º–∏–Ω–∞–ª
        print(time.ctime(int(time.time())), "\nUSER: @{0}\
                                             \n–ò–º—è: {1}\
                                             \n–§–∞–º–∏–ª–∏—è: {2}\
                                             \nID: {3}\n".format(message.from_user.username,
                                                                       message.from_user.first_name,
                                                                       message.from_user.last_name,
                                                                       str(message.from_user.id)))
        print("–ó–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞!")
        print("-----------------------------")

        # –°—Ç–∏–∫–µ—Ä
        file_id = 'CAACAgIAAxkBAAJJaV6aMWT4JQbsYEVZZ7VivtL_YV6PAAJtBQACztjoC70P1nRDCpMcGAQ'
        bot.send_sticker(message.chat.id, file_id)
        #–°–æ–æ–±—â–µ–Ω–∏–µ /start
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö.".format(message.from_user, bot.get_me()), parse_mode='html')
        mainkeyboard(message)
################################################################################################
###                                      –ö–æ–º–∞–Ω–¥–∞ /help                                       ###
################################################################################################
@bot.message_handler(commands=['help'])
def help(message):
    file_id = 'CAACAgIAAxkBAAJJbV6aMez2goOqWyyrNg06bZeg8xmXAAKmBQACztjoC8vKTTQSsWS3GAQ'
    bot.send_sticker(message.chat.id, file_id)
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤—Ä–æ–±–ª–µ–º—ã. \n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ /restart. \n–ï—Å–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ —Ä–∞–∑–¥–µ–ª–µ \n*–û–±—Ä–∞—Ç–Ω–∞—è* *—Å–≤—è–∑—å* üìû", parse_mode='markdown')
################################################################################################
###                                  –ö–æ–º–∞–Ω–¥–∞ /restart                                        ###
################################################################################################
@bot.message_handler(commands=['restart'])
def stop(message):
    pass
    delete = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–°–∏—Å—Ç–µ–º–∞ –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞!", reply_markup=delete)
    mainkeyboard(message)
################################################################################################################################################################################################
#                                                                                           –ö–æ—Ä–æ–Ω–æ–≤–∏—Ä—É—Å
################################################################################################################################################################################################
def cvd_panel(message):
    global cvd_sticker
    markup = types.InlineKeyboardMarkup(row_width=2)

    ru = types.InlineKeyboardButton("–†–æ—Å—Å–∏—èüá∑üá∫", callback_data='ru_cvd')
    kz = types.InlineKeyboardButton("–ö–∞–∑–∞—Ö—Å—Ç–∞–Ωüá∞üáø", callback_data='kz_cvd')
    bl = types.InlineKeyboardButton("–ë–µ–ª–∞—Ä—É—Å–∏—èüáßüáæ", callback_data='bl_cvd')
    uk = types.InlineKeyboardButton("–£–∫—Ä–∞–∏–Ω–∞üá∫üá¶", callback_data='uk_cvd')
    world = types.InlineKeyboardButton("–ú–∏—Ä üåè", callback_data='world_cvd')
    us = types.InlineKeyboardButton("–°–®–ê üá∫üá∏", callback_data='us_cvd')
    it = types.InlineKeyboardButton("–ò—Ç–∞–ª–∏—è üáÆüáπ", callback_data='it_cvd')
    uz = types.InlineKeyboardButton("–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω üá∫üáø", callback_data='uz_cvd')
    pl = types.InlineKeyboardButton("–ü–æ–ª—å—à–∞ üáµüá±", callback_data='pl_cvd')

    markup.add(world)
    markup.add(ru, kz)
    markup.add(bl, uk)
    markup.add(us, it)
    markup.add(uz, pl)

    file_id = 'CAACAgIAAxkBAAJHr16XGp5ZZwRzJjyw7ZuejrB4sHE8AALyAQACVp29CgqJR4ysf4fyGAQ'
    cvd_sticker = bot.send_sticker(message.chat.id, file_id)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:', reply_markup=markup)
################################################################################################################################################################################################
###                                                                                            –§—É–Ω–∫—Ü–∏—è                                                                                       ###
################################################################################################################################################################################################
###                                     FUNC –ì–õ–ê–í–ù–´–ô –ü–ê–ù–ï–õ–¨                                  ###
################################################################################################
def mainkeyboard(message):
    key = types.ReplyKeyboardMarkup(resize_keyboard=True)

    next = types.KeyboardButton("[–î–∞–ª–µ–µ]")
    social = types.KeyboardButton("–°–æ—Ü.–°–µ—Ç–∏üì±")
    games = types.KeyboardButton("–ò–≥—Ä—ã üéÆ")
    weather = types.KeyboardButton("–ü–æ–≥–æ–¥–∞ ‚õÖÔ∏è")
    anekdot = types.KeyboardButton("–ê–Ω–µ–∫–¥–æ—ÇüòÇ")
    virus = types.KeyboardButton("COVID-19ü¶†")

    key.row(social)
    key.row(games, anekdot)
    key.row(weather, virus)
    key.row(next)

    bot.send_message(message.chat.id, '`–í—ã–±–µ—Ä–∏—Ç–µ` `–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π` `–≤–∞—Å` `—Ä–∞–∑–¥–µ–ª:`', reply_markup=key, parse_mode='markdown', disable_web_page_preview=True)
################################################################################################
###                                     FUNC –°–õ–ï–î –°–¢–†                                        ###
################################################################################################
def next(message):
    types.ReplyKeyboardRemove()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    versionbb = types.KeyboardButton("–í–µ—Ä—Å–∏—è –ë–û–¢–∞ ü§ñ")
    creator = types.KeyboardButton("–°–æ–∑–¥–∞—Ç–µ–ª–∏ üë®üèª‚Äçüíª")
    callback = types.KeyboardButton("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû")
    # pp = types.KeyboardButton("–¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –æ—Ç –Ω–∞—à–∏—Ö –¥—Ä—É–∑–µ–π")
    back = types.KeyboardButton("[–ù–∞–∑–∞–¥]")
    review = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ‚≠êÔ∏è")

    markup.add(versionbb, creator)
    markup.add(review, callback)
    # markup.add(pp)
    markup.add(back)
    bot.send_message(message.chat.id, '`–í—ã–±–µ—Ä–∏—Ç–µ` `–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π` `–≤–∞—Å` `—Ä–∞–∑–¥–µ–ª:`', reply_markup=markup, parse_mode='markdown')
################################################################################################
###                                      FUNC CALLBACK                                         ###
################################################################################################
def callback(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAJJb16aMjJL6WR31YWAW329kHz2vCHbAAKrBQACztjoC3vwAAGsZfJ5PxgE')
    bot.send_message(message.chat.id, '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É:\nnazarex1020@gmail.com –∏–ª–∏ –∂–µ –Ω–∞–ø–∏—à–∏—Ç–µ [—Å—é–¥–∞](https://t.me/nagiez)', parse_mode='markdown', disable_web_page_preview=True)
################################################################################################
###                                      FUNC CREATOR                                        ###
################################################################################################
def creator(message):
    bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π *Foresti* *Team* \
                                                                                                \n\
                                                                                                \n*–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:* `–ù—É—Ä–º—É—Ö–∞–º–º–µ–¥` `–ë–æ—Å—Ç–∞–Ω` \
                                                                                                \n*–ê–Ω–∞–ª–∏—Ç–∏–∫:* `–ú–∏—Ö–∞–∏–ª` `–°—É—Ö–æ–≤`\
                                                                                                \n*–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫*: `–ò–ª—å—è` `–ö–æ–Ω–æ—â–µ–Ω–æ–∫`\
                                                                                                \n*–ú–µ–Ω–µ–¥–∂–µ—Ä* *–ø—Ä–æ–µ–∫—Ç–∞:* `–ò–ª—å—è` `–ë—É–≥–∞—ë–≤`',
                                                                                                parse_mode='markdown')

def version(message):
    bot.send_message(message.chat.id, '–í–µ—Ä—Å–∏—è `1.7.10-b`', parse_mode='markdown')
################################################################################################
###                                      FUNC SOCIAL                                         ###
################################################################################################
def call_social(message):

    markup = types.InlineKeyboardMarkup(row_width=2)

    video_in_audio_yt = types.InlineKeyboardButton("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∞—É–¥–∏–æ –≤ –≤–∏–¥–µ–æ –∏–∑ YouTube", callback_data='v_i_a_yt')
    dwnl_video_yt = types.InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ YouTube", callback_data='d_v_yt')
    dwnl_photo_ins = types.InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –∏–∑ Instagram", callback_data='d_p_ins')
    dwnl_video_ins = types.InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ Instagram", callback_data='d_v_ins')

    markup.add(video_in_audio_yt)
    markup.add(dwnl_video_yt)
    markup.add(dwnl_photo_ins)
    markup.add(dwnl_video_ins)

    file_id = 'CAACAgIAAxkBAAJJcV6aMmuDvoXyeIz9XG6SYfEAAQjrBwACjQUAAs7Y6AsiezOh7cvX6BgE'
    bot.send_sticker(message.chat.id, file_id)
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:', reply_markup=markup)
################################################################################################
###                                     FUNC –ê–ù–ï–ö–î–û–¢                                         ###
################################################################################################
def getanekdot():
    z=''
    s=requests.get('http://anekdotme.ru/random')
    b=bs4.BeautifulSoup(s.text, "html.parser")
    p=b.select('.anekdot_text')
    for x in p:
        s=(x.getText().strip())
        z=z+s+'\n\n'
    return s
################################################################################################
###                                      FUNC WEATHER                                        ###
################################################################################################
def weather_owm(call, weather_city, weather_city1, weather_city2):
    owm = pyowm.OWM('27d057065c7fb12eb132fe31b42c2195', language = "ru")
    observation = owm.weather_at_place(weather_city)
    w = observation.get_weather()

    temp = w.get_temperature('celsius') ["temp"]
    speed = w.get_wind() ["speed"]
    tempmin = w.get_temperature('celsius') ["temp_min"]
    tempmax = w.get_temperature('celsius') ["temp_max"]

    if temp < -20:
        answer_weather = "\n\n[–õ—É—á—à–µ —Å–∏–¥–µ—Ç—å –¥–æ–º–∞!]"
    elif temp < -10:
        answer_weather = "\n\n[–ù–∞ —É–ª–∏—Ü–µ –º–æ—Ä–æ–∑, –≤–æ–∑–º–∏ –ø–µ—Ä—á–∞—Ç–∫–∏!]"
    elif temp < 0:
        answer_weather = "\n\n[–ù–∞ —É–ª–∏—Ü–µ –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –ù–µ –∑–∞–±—É–¥—å —à–∞–ø–∫—É!]"
    elif temp < 15:
        answer_weather = "\n\n[–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ, –æ–¥–µ–≤–∞–π—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ.]"
    elif temp < 35:
        answer_weather = "\n\n[–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—Ä–º, –Ω–∞–¥–µ–≤–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ.]"
    else:
        answer_weather = "\n\n[–ù–∞ —É–ª–∏—Ü–µ –∂–∞—Ä–∞]"
        file_id = 'CAACAgIAAxkBAAI_5V6NxC18AVgHWhOUDJeVPl1wiOJvAAICAwACusCVBTRFBuRNlNodGAQ'
        bot.send_sticker(call.message.chat.id, file_id)

    bot.send_message(call.message.chat.id,"–í –≥–æ—Ä–æ–¥–µ " + weather_city1 + " —Å–µ–π—á–∞—Å: " + w.get_detailed_status() + "\n–¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ " + weather_city2 + " —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(temp)+ " ¬∞C." + "\nMin/Max = " + str(tempmin) + " / " + str(tempmax) + " ¬∞C" + " \n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(speed) + " –º/—Å" + str(answer_weather))
    bot.delete_message(call.message.chat.id, call.message.message_id)
################################################################################################################################################################################################
###                                                                                              –¢–ï–ö–°–¢                                                                                       ###
################################################################################################################################################################################################
@bot.message_handler(content_types=['text'])
def ansbutton(message):
    global call_weather_message
    if message.chat.type == 'private':
        if message.from_user.id == banlist:
            bot.delete_message(message.chat.id, message.message_id)
            delet = types.ReplyKeyboardRemove()
            file_id = 'CAACAgIAAxkBAAI2qF54r4eaZHe6ZZyCBzJg2POqbRWhAAItAQACWQMDAAEt9hslJkzrsRgE'
            bot.send_sticker(message.chat.id, file_id)
            bot.send_message(message.chat.id, '–í–´ –ë–´–õ–ò –ó–ê–ë–ê–ù–ï–ù–´!', reply_markup=delet)
        else:
            ################################################################################################
            ###                                          –ü–∞–Ω–µ–ª—å                                          ###
            ################################################################################################
            if message.text == '–ü–æ–≥–æ–¥–∞ ‚õÖÔ∏è':
                markup = types.InlineKeyboardMarkup(row_width=2)
                piter = types.InlineKeyboardButton("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –†–§ üá∑üá∫", callback_data='piter1')
                moscow = types.InlineKeyboardButton("–ú–æ—Å–∫–≤–∞, –†–§ üá∑üá∫", callback_data='moscow1')
                kazan = types.InlineKeyboardButton("–ö–∞–∑–∞–Ω—å, –†–§ üá∑üá∫", callback_data='kazan1')
                ekb = types.InlineKeyboardButton("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –†–§ üá∑üá∫", callback_data='ekb1')
                nov = types.InlineKeyboardButton("–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –†–§ üá∑üá∫", callback_data='nov1')
                kalin = types.InlineKeyboardButton("–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥, –†–§ üá∑üá∫", callback_data='kalin1')
                shym = types.InlineKeyboardButton("–®—ã–º–∫–µ–Ω—Ç, –†–ö üá∞üáø", callback_data='shym1')
                alm = types.InlineKeyboardButton("–ê–ª–º–∞—Ç—ã, –†–ö üá∞üáø", callback_data='alm1')
                ast = types.InlineKeyboardButton("–ù—É—Ä-–°—É–ª—Ç–∞–Ω, –†–ö üá∞üáø", callback_data='ast1')
                local = types.InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ì–ï–û üìç", callback_data='local')

                markup.add(ast)
                markup.add(alm)
                markup.add(shym)
                markup.add(moscow)
                markup.add(piter)
                markup.add(kazan)
                markup.add(ekb)
                markup.add(nov)
                markup.add(kalin)
                markup.add(local)

                bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤:', reply_markup=markup)
            elif message.text == 'COVID-19ü¶†':
                cvd_panel(message)
                # bot.send_message(message.chat.id, '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –∑–∞–∫—Ä—ã—Ç!\n–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è.')

            elif message.text == '–°–æ—Ü.–°–µ—Ç–∏üì±':
                bot.delete_message(message.chat.id, message.message_id)
                call_social(message)

            elif message.text == '–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ‚≠êÔ∏è':
                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton("‚≠êÔ∏è", callback_data='star1')
                item2 = types.InlineKeyboardButton("‚≠êÔ∏è‚≠êÔ∏è", callback_data='star2')
                item3 = types.InlineKeyboardButton("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", callback_data='star3')
                item4 = types.InlineKeyboardButton("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", callback_data='star4')
                item5 = types.InlineKeyboardButton("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è", callback_data='star5')

                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item4)
                markup.add(item5)

                bot.send_message(message.chat.id, '–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç', reply_markup=markup)

            elif message.text == '–ò–Ω—Ñ–æüìã': # —É–¥–∞–ª–∏—Ç—å —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π (15.04.2020)
                next(message)
            elif message.text == '[–î–∞–ª–µ–µ]':
                next(message)
            elif message.text == '–í–µ—Ä—Å–∏—è –ë–û–¢–∞ ü§ñ':
                version(message)
            elif message.text == '–°–æ–∑–¥–∞—Ç–µ–ª–∏ üë®üèª‚Äçüíª':
                creator(message)
            elif message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû':
                callback(message)
            elif message.text == '[–ù–∞–∑–∞–¥]':
                mainkeyboard(message)
            elif message.text == '–ò–≥—Ä—ã üéÆ':

                markup = types.InlineKeyboardMarkup(row_width=2)
                gms = types.InlineKeyboardButton(text='–ø–µ—Ä–µ–π—Ç–∏', url='https://t.me/gamee', callback_data='gms')
                markup.add(gms)

                bot.send_message(message.chat.id, '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞, –≥–¥–µ –º–æ–∂–Ω–æ –ø–æ–∏–≥—Ä–∞—Ç—å –ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ', reply_markup=markup)
            elif message.text == '–ê–Ω–µ–∫–¥–æ—ÇüòÇ':
                answer = "–•–æ—á–µ—Ç –ø–æ—á–∏—Ç–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç–∞"
                txt(message, answer)
                bot.send_chat_action(message.chat.id, 'typing')
                bot.reply_to(message, getanekdot())
            elif message.text == '–¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –æ—Ç –Ω–∞—à–∏—Ö –¥—Ä—É–∑–µ–π':
                markup = types.InlineKeyboardMarkup(row_width=2)

                cg = types.InlineKeyboardButton(text='CINEMA GEEKS', url='t.me/CINEMAGEEKS_bot')
                tl = types.InlineKeyboardButton(text='Traffic laws helper', url='t.me/Trafficlawshelper_bot')

                markup.add(cg)
                markup.add(tl)

                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAJJc16aMpxBTXMUFrsFJ0PLBgEE7wTUAAKIBQACztjoC231wM7ctbTjGAQ')
                bot.send_message(message.chat.id, '–°–æ–≤–µ—Ç—É—é –≤–∞–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –æ—Ç –Ω–∞—à–∏—Ö –¥—Ä—É–∑–µ–π:', reply_markup=markup)
            ################################################################################################
            #                                         –ü–∞—Å—Ö–∞–ª—å–Ω–æ–µ —è–π—Ü–æ                                      #
            ################################################################################################
            elif message.text == 'frog' or message.text == 'Frog':
                answer = "–ù–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!"
                txt(message, answer)
                file_id = 'CAACAgIAAxkBAAIx0l5qeu-IDGRasmaNpRkWBVqDDabQAAIFAAN1UIETZmBnin0s48QYBA'
                bot.send_sticker(message.chat.id, file_id)
                bot.send_message(message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –Ω–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!')
            elif message.text == 'Cat' or message.text == 'cat':
                answer = "–ù–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!"
                txt(message, answer)
                file_id = 'CCAACAgEAAxkBAAJJi16aNd-t3WsKg2mP5wclzXKpN7yGAAIDCgACv4yQBJGkR4JOgqlxGAQ'
                bot.send_sticker(message.chat.id, file_id)
                bot.send_message(message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –Ω–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!')
            elif message.text == 'Dog' or message.text == 'dog':
                answer = "–ù–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!"
                txt(message, answer)
                file_id = 'CAACAgIAAxkBAAJJiV6aNbsOQZ0NlZTXaRYZ0j_nYZqxAAIHAAOKfy43zv_oD7S3blYYBA'
                bot.send_sticker(message.chat.id, file_id)
                bot.send_message(message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –Ω–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!')
            elif message.text == 'Freeman' or message.text == 'freeman':
                answer = "–ù–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!"
                txt(message, answer)
                file_id = 'CAACAgQAAxkBAAIx1F5qe7vr5tUe-ROJwKTyaRwkSvemAAJRAAODatAQ9LqbS-wgwS8YBA'
                bot.send_sticker(message.chat.id, file_id)
                bot.send_message(message.chat.id, '–Ø –≤–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–µ–Ω, —ç—Ç–æ –≤—ã –¥–æ–ª–∂–Ω—ã —Å–µ–±–µ.')
            elif message.text == 'no rules' or message.text == 'No rules' or message.text == '/no_rules' or message.text == 'no rules!' or message.text == 'No rules!' or message.text == '—Ç–∞–Ω—Ü—É–µ–º' or message.text == '–¢–∞–Ω—Ü—É–µ–º' or message.text == 'dance' or message.text == 'Dance' or message.text == 'party hard' or message.text == 'Party hard':
                answer = "–ù–∞—à–µ–ª(–Ω–∞—à–ª–∞) –ø–∞—Å—Ö–∞–ª–∫—É!"
                bot.send_chat_action(message.chat.id, 'find_location')
                txt(message, answer)
                audio = open('No Rules!.mp3', 'rb')
                bot.send_audio(message.chat.id, audio)
                file_id = 'CAACAgIAAxkBAAJJdV6aMsIIj21ygdN9Ssm9sTQJptcRAAKLBQACztjoC6GpRX_jrcCsGAQ'
                bot.send_sticker(message.chat.id, file_id)
                bot.send_message(message.chat.id, '–ì–æ —Ç—É—Å–∏—Ç—å!')
            ################################################################################################
            ###                                      –§–∏–ª—å—Ç—Ä –º–∞—Ç–∞                                         ###
            ################################################################################################
            elif message.text == '—Å—É–∫–∞' or message.text == '–°—É–∫–∞' or message.text == '–ø–∏–¥–æ—Ä' or message.text == '–ü–∏–¥–æ—Ä' or message.text == '–ø–∏–¥–∞—Ä–∞—Å' or message.text == '–ü–∏–¥–∞—Ä–∞—Å' or message.text == '–ø–∏–∑–¥–∞' or message.text == '–ü–∏–∑–¥–∞' or message.text == '—Ö—É–π' or message.text == '–•—É–π' or message.text == 'Xyu' or message.text == 'xyu' or message.text == '–≥–æ–Ω–¥–æ–Ω' or message.text == '–ì–æ–Ω–¥–æ–Ω' or message.text == '–±–ª—è—Ç—å' or message.text == '–ë–ª—è—Ç—å' or message.text == '–±–ª—è' or message.text == '–ë–ª—è' or message.text == '—Ö–µ—Ä' or message.text == '–•–µ—Ä' or message.text == '–•–µ—Ä—å' or message.text == '—Ö–µ—Ä—å' or message.text == '–ª–æ—Ö' or message.text == '–õ–æ—à–∞—Ä–∞' or message.text == '–∑–∞–ª—É–ø–∞' or message.text == '–ó–∞–ª—É–ø–∞' or message.text == '–æ—Ö—É–µ–Ω–Ω–æ' or message.text == '–û—Ö—É–µ–Ω–Ω–æ' or message.text == '–º—É–¥–∞–∫' or message.text == '–ú—É–¥–∞–∫' or message.text == '–ú—Ä–∞–∑—å' or message.text == '–º—Ä–∞–∑—å' or message.text == '–ø–µ—Ä–¥—É–Ω' or message.text == '–ü–µ—Ä–¥—É–Ω' or message.text == '–ø–∏–∑–¥–µ—Ç—å' or message.text == '–∞–Ω–∞–ª' or message.text == '–ê–Ω–∞–ª' or message.text == '–ü–∏–∑–¥–µ—Ç—å' or message.text == '–∂–æ–ø–∞' or message.text == '–ñ–æ–ø–∞' or message.text == '–ø–∞–¥–ª–∞' or message.text == '–ü–∞–¥–ª–∞' or message.text == '–ü–æ—Ö—É–π' or message.text == '–ø–æ—Ö—É–π' or message.text == '–Ω–∏–≥–≥–∞' or message.text == '–ù–∏–≥–≥–∞' or message.text == '–ù–∏–≥–µ—Ä' or message.text == '–Ω–∏–≥–µ—Ä' or message.text == '–•—É–π–Ω—è' or message.text == '—Ö—É–π–Ω—è':
                bot.delete_message(message.chat.id, message.message_id)
                answer = "–û–±–∑—ã–≤–∞–µ—Ç—Å—è!"
                txt(message, answer)
                file_id = 'CAACAgIAAxkBAAJJh16aNSzWrVcaD45W3Q-z_GHiV3tZAAJxBQACztjoCwR34r4skuTsGAQ'
                bot.send_sticker(message.chat.id, file_id)
            ################################################################################################
            ###                             –ó–Ω–∞—á–µ–Ω–∏–µ ELSE –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö                         ###
            ################################################################################################
            else:
                answer = "–ü–ò–®–ï–¢ –î–ò–ß–¨"
                txt(message, answer)
                file_id = 'CAACAgIAAxkBAAJJd16aMxnK0_4SE4Swc17FUSL5e6wLAAKlBQACztjoC-kLCo3s8H9xGAQ'
                bot.send_sticker(message.chat.id, file_id)
                bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å!')

################################################################################################################################################################################################
###                                                                                   CAllBAC InlineKeyboards                                                                                ###
################################################################################################################################################################################################
#InlineKeyboards
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            ################################################################################################
            ###                                CALLBACK –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤                                   ###
            ################################################################################################
            if call.data == 'star1':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                callans = "1"
                star(call, callans)
                file_id = 'CAACAgIAAxkBAAJJeV6aMy1hWwz0Xh2mqJSqCVyZF9TxAAJ6BQACztjoC2HJ4Rcvib92GAQ'
                sti = bot.send_sticker(call.message.chat.id, file_id)
                bot.send_message(call.message.chat.id, '–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –Ω–µ –¥–ª—è –í–∞—Å.')
            elif call.data == 'star2':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                callans = "2"
                star(call, callans)
                file_id = 'CAACAgIAAxkBAAJJe16aMznGD4e4CL0w4zBOY_XI4i2sAAJ8BQACztjoC_7XeYL8ab6XGAQ'
                sti = bot.send_sticker(call.message.chat.id, file_id)
                bot.send_message(call.message.chat.id, '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –æ—à–∏–±–∫–∞–º–∏.')

            elif call.data == 'star3':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                callans = "3"
                star(call, callans)
                file_id = 'CAACAgIAAxkBAAJJfV6aM06fBSwiFrxMwR9i3h5NZUT1AAKMBQACztjoC4V1-fyGKIxNGAQ'
                sti = bot.send_sticker(call.message.chat.id, file_id)
                bot.send_message(call.message.chat.id, '–ë—É–¥–µ–º —Å—Ç–∞—Ä–∞—Ç—å—Å—è!')

            elif call.data == 'star4':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                callans = "4"
                star(call, callans)
                file_id = 'CAACAgIAAxkBAAJJf16aM1u0lPf2abnujaJQrmy4AoOLAAKiBQACztjoC61sVQ-LShGEGAQ'
                sti = bot.send_sticker(call.message.chat.id, file_id)
                bot.send_message(call.message.chat.id, '–°–ø–∞—Å–∏–±–æ. –ó–∞—Ö–æ–¥–∏—Ç–µ –µ—â–µ!')
            elif call.data == 'star5':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                callans = "5"
                star(call, callans)
                file_id = 'CAACAgIAAxkBAAJJgV6aM2dC8hez2d9BmE7U3cHD_q2QAAKBBQACztjoC8fgM5-5KThxGAQ'
                sti = bot.send_sticker(call.message.chat.id, file_id)
                bot.send_message(call.message.chat.id, '–ò –º—ã —Ç–µ–±—è –ª—é–±–∏–º!', sti)
            ################################################################################################
            ###                                  CALLBACK –ü–æ–≥–æ–¥–∞                                         ###
            ################################################################################################
            elif call.data == 'moscow1':
                weather_city = "Moscow,RU"
                weather_city1 = "–ú–æ—Å–∫–≤–∞"
                weather_city2 = "–ú–æ—Å–∫–≤–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'piter1':
                weather_city = "Saint Petersburg, RU"
                weather_city1 = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
                weather_city2 = "–ü–∏—Ç–µ—Ä–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'kazan1':
                weather_city = "Kazan', RU"
                weather_city1 = "–ö–∞–∑–∞–Ω—å"
                weather_city2 = "–ö–∞–∑–∞–Ω–∏"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'ekb1':
                weather_city = "Ekaterinburg, RU"
                weather_city1 = "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"
                weather_city2 = "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'nov1':
                weather_city = "Novosibirsk, RU"
                weather_city1 = "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"
                weather_city2 = "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'kalin1':
                weather_city = "Kaliningrad, RU"
                weather_city1 = "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥"
                weather_city2 = "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'shym1':
                weather_city = "Shymkent, KZ"
                weather_city1 = "–®—ã–º–∫–µ–Ω—Ç"
                weather_city2 = "–®—ã–º–∫–µ–Ω—Ç–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'alm1':
                weather_city = "Almaty, KZ"
                weather_city1 = "–ê–ª–º–∞—Ç—ã"
                weather_city2 = "–ê–ª–º–∞—Ç–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'ast1':
                weather_city = "Nur-Sultan,KZ"
                weather_city1 = "–ù—É—Ä-–°—É–ª—Ç–∞–Ω"
                weather_city2 = "–ù—É—Ä-–°—É–ª—Ç–∞–Ω–µ"
                weather_owm(call, weather_city, weather_city1, weather_city2)
            elif call.data == 'local':
                global weather_local
                bot.delete_message(call.message.chat.id, call.message.message_id)
                keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ üìç", request_location=True)
                back = types.KeyboardButton(text="[–ù–∞–∑–∞–¥]")
                keyboard.add(button_geo)
                keyboard.add(back)
                weather_local = bot.send_message(call.message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–¥–∞–π –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–¥–µ–Ω–∏–π –æ –ø–æ–≥–æ–¥–µ.", reply_markup=keyboard)
            ################################################################################################
            ###                                     CALLBACK –°–æ—Ü. —Å–µ—Ç–∏                                   ###
            ################################################################################################
            elif call.data == 'callback_func':
                markup = types.InlineKeyboardMarkup(row_width=2)

                video_in_audio_yt = types.InlineKeyboardButton("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∞—É–¥–∏–æ –≤ –≤–∏–¥–µ–æ –∏–∑ YouTube", callback_data='v_i_a_yt')
                dwnl_video_yt = types.InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ YouTube", callback_data='d_v_yt')
                dwnl_photo_ins = types.InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –∏–∑ Instagram", callback_data='d_p_ins')
                dwnl_video_ins = types.InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ Instagram", callback_data='d_v_ins')

                markup.add(video_in_audio_yt)
                markup.add(dwnl_video_yt)
                markup.add(dwnl_photo_ins)
                markup.add(dwnl_video_ins)


                bot.send_message(call.message.chat.id, '–°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:', reply_markup=markup)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'v_i_a_yt':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                ansfunc = ("–•–æ—á–µ—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –≤ –∞—É–¥–∏–æ –∏–∑ YouTube")
                func(call, ansfunc)

                markup = types.InlineKeyboardMarkup(row_width=2)

                ins = types.InlineKeyboardButton(text='–ø–µ—Ä–µ–π—Ç–∏', url='t.me/foresti2_bot')
                back_func = types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥', callback_data= 'callback_func' )

                markup.add(ins)
                markup.add(back_func)

                bot.send_message(call.message.chat.id, '\n*–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è*:\
                                                    \n1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ø–µ—Ä–µ–π—Ç–∏"\
                                                    \n2. /start (–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ)\
                                                    \n3. –í—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ\
                                                    \n4. –ñ–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç', parse_mode='markdown', reply_markup=markup)


            elif call.data == 'd_v_yt':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                ansfunc = ("–•–æ—á–µ—Ç—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ YouTube")
                func(call, ansfunc)
                markup = types.InlineKeyboardMarkup(row_width=2)

                ins = types.InlineKeyboardButton(text='–ø–µ—Ä–µ–π—Ç–∏', url='t.me/foresti3_bot')
                back_func = types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥', callback_data= 'callback_func' )

                markup.add(ins)
                markup.add(back_func)

                bot.send_message(call.message.chat.id, '\n*–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è*:\
                                                    \n1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ø–µ—Ä–µ–π—Ç–∏"\
                                                    \n2. /start (–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ)\
                                                    \n3. –í—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ\
                                                    \n4. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤–∏–¥–µ–æ\
                                                    \n4. –ñ–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥', parse_mode='markdown', reply_markup=markup)

            elif call.data == 'd_p_ins':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                ansfunc = ("–•–æ—á–µ—Ç—å —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –∏–∑ Instagram")
                func(call, ansfunc)
                markup = types.InlineKeyboardMarkup(row_width=2)

                ins = types.InlineKeyboardButton(text='–ø–µ—Ä–µ–π—Ç–∏', url='t.me/foresti3_bot')
                back_func = types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥', callback_data= 'callback_func' )

                markup.add(ins)
                markup.add(back_func)

                bot.send_message(call.message.chat.id, '\n*–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è*:\
                                                    \n1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ø–µ—Ä–µ–π—Ç–∏"\
                                                    \n2. /start (–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ)\
                                                    \n3. –í—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç\
                                                    \n4. –ñ–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥', parse_mode='markdown', reply_markup=markup)

            elif call.data == 'd_v_ins':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                ansfunc = ("–•–æ—á–µ—Ç—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ Instagram")
                func(call, ansfunc)
                markup = types.InlineKeyboardMarkup(row_width=2)

                ins = types.InlineKeyboardButton(text='–ø–µ—Ä–µ–π—Ç–∏', url='t.me/foresti3_bot')
                back_func = types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥', callback_data= 'callback_func' )

                markup.add(ins)
                markup.add(back_func)

                bot.send_message(call.message.chat.id, '\n*–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è*:\
                                                    \n1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ø–µ—Ä–µ–π—Ç–∏"\
                                                    \n2. /start (–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ)\
                                                    \n3. –í—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç\
                                                    \n4. –ñ–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥', parse_mode='markdown', reply_markup=markup)
            ################################################################################################
            ###                                      CALL BACK COVID-19 –°—Ç—Ä–∞–Ω—ã                           ###
            ################################################################################################
            elif call.data == 'ru_cvd':
                location = covid19.getLocationByCountryCode("RU")
                mess = f"""–í *–†–æ—Å—Å–∏–∏* üá∑üá∫ \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'kz_cvd':
                location = covid19.getLocationByCountryCode("KZ")
                mess = f"""–í *–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ* üá∞üáø \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)

            elif call.data == 'bl_cvd':
                location = covid19.getLocationByCountryCode("BY")
                mess = f"""–í *–ë–µ–ª–æ—Ä—É—Å—Å–∏–∏ üáßüáæ* \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'uk_cvd':
                location = covid19.getLocationByCountryCode("UA")
                mess = f"""–í *–£–∫—Ä–∞–∏–Ω–µ* üá∫üá¶ \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'uz_cvd':
                location = covid19.getLocationByCountryCode("UZ")
                mess = f"""–í *–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ üá∫üáø* \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'it_cvd':
                location = covid19.getLocationByCountryCode("IT")
                mess = f"""–í *–ò—Ç–∞–ª–∏–∏ üáÆüáπ* \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'us_cvd':
                location = covid19.getLocationByCountryCode("US")
                mess = f"""–í *–°–®–ê üá∫üá∏* \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'pl_cvd':
                location = covid19.getLocationByCountryCode("PL")
                mess = f"""–í *–ü–æ–ª—å—à–µ üáµüá±* \n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: *{location[0]['country_population']}* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location[0]['latest']['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location[0]['latest']['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            elif call.data == 'world_cvd':
                location = covid19.getLatest()
                mess = f"""–í *–ú–∏—Ä–µ üåè* \n–ó–∞—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: *{location['confirmed']}* \n–°–º–µ—Ä—Ç–µ–π: *{location['deaths']}* \n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ...](https://yandex.ru/maps/covid19) \n\n[–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –í–û–ó](https://www.who.int/ru/emergencies/diseases/novel-coronavirus-2019/advice-for-public)"""
                bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAJG8F6V1CPNwH5Aywe4AAG-xgEosWAWuAAC5wEAAladvQoNeVnL-khcCxgE')
                bot.delete_message(call.message.chat.id, cvd_sticker.message_id)
                bot.send_message(call.message.chat.id, mess, parse_mode='markdown', disable_web_page_preview=True)
                bot.delete_message(call.message.chat.id, call.message.message_id)
            ################################################################################################
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            # bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
            #     text="—Å–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")
    except Exception as e:
        print(repr(e))
################################################################################################
###                     –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–æ–∫–∞—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–ø–æ–≥–æ–¥–∞                             ###
################################################################################################
@bot.message_handler(content_types=["location"])
def location(message):
        owm = pyowm.OWM('945a394890eab9e4e54bdda87d5e37e7', language="ru")
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, weather_local.message_id)
        obs = owm.weather_at_coords(message.location.latitude, message.location.longitude)
        w = obs.get_weather()  # –ø–æ—É–ª—á–∞–µ–º –≤—Å—é –ø–æ–≥–æ–¥—É –∏–∑ —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞

        temp = w.get_temperature('celsius') ["temp"]
        speed = w.get_wind() ["speed"]
        tempmin = w.get_temperature('celsius') ["temp_min"]
        tempmax = w.get_temperature('celsius') ["temp_max"]

        if temp < -20:
            answer_weather = "\n\n[–õ—É—á—à–µ —Å–∏–¥–µ—Ç—å –¥–æ–º–∞!]"
        elif temp < -10:
            answer_weather = "\n\n[–ù–∞ —É–ª–∏—Ü–µ –º–æ—Ä–æ–∑, –≤–æ–∑–º–∏ –ø–µ—Ä—á–∞—Ç–∫–∏!]"
        elif temp < 0:
            answer_weather = "\n\n[–ù–∞ —É–ª–∏—Ü–µ –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –ù–µ –∑–∞–±—É–¥—å —à–∞–ø–∫—É!]"
        elif temp < 15:
            answer_weather = "\n\n[–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ, –æ–¥–µ–≤–∞–π—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ.]"
        elif temp < 35:
            answer_weather = "\n\n[–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—Ä–º, –Ω–∞–¥–µ–≤–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ.]"
        else:
            answer_weather = "\n\n[–ù–∞ —É–ª–∏—Ü–µ –∂–∞—Ä–∞]"
            file_id = 'CAACAgIAAxkBAAI_5V6NxC18AVgHWhOUDJeVPl1wiOJvAAICAwACusCVBTRFBuRNlNodGAQ'
            bot.send_sticker(message.chat.id, file_id)

        key = types.ReplyKeyboardMarkup(resize_keyboard=True)

        next = types.KeyboardButton("[–î–∞–ª–µ–µ]")
        social = types.KeyboardButton("–°–æ—Ü.–°–µ—Ç–∏üì±")
        games = types.KeyboardButton("–ò–≥—Ä—ã üéÆ")
        weather = types.KeyboardButton("–ü–æ–≥–æ–¥–∞ ‚õÖÔ∏è")
        anekdot = types.KeyboardButton("–ê–Ω–µ–∫–¥–æ—ÇüòÇ")
        virus = types.KeyboardButton("COVID-19ü¶†")

        key.row(social)
        key.row(games, anekdot)
        key.row(weather, virus)
        key.row(next)


        bot.send_message(message.chat.id,"–í —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ, —Å–µ–π—á–∞—Å: " + w.get_detailed_status() + "\n–¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(temp)+ " ¬∞C." + "\nMin/Max = " + str(tempmin) + " / " + str(tempmax) + " ¬∞C" + " \n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(speed) + " –º/—Å" + str(answer_weather), reply_markup=key)
################################################################################################################################################################################################
####                                                                                         –ê–Ω—Ç–∏—Ñ–ª—É–¥                                                                                       ####
################################################################################################################################################################################################
@bot.message_handler(content_types=['sticker', 'audio', 'vidio', 'vidio_note', 'voice', 'photo', 'document', 'emoji'])
def sticker_handler(message):
    bot.delete_message(message.chat.id, message.message_id)
################################################################################################################################################################################################
#–¢–µ—Ä–º–∏–Ω–∞–ª –∑–∞–ø—É—Å–∫–∞
print('------------ Foresti Team -------------')
print('–¢–∏–ø –ë–æ—Ç–∞ - –ì–ª–∞–≤–Ω—ã–π')
print('–ù–∞–∑–≤–∞–Ω–∏–µ –¢–µ–ª–µ–≥–∞—Ä–º–º –ë–æ—Ç–∞ - "Foresti Bot"')
print('–ó–∞–ø—É—Å–∫ –∫–æ–¥–∞...')
print('–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
print('---------------------------------------')
#–°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
bot.send_message(admin_id, '`–°–ï–†–í–ï–†:` _–ë–æ—Ç_ _—É—Å–ø–µ—à–Ω–æ_ _–∑–∞–ø—É—â–µ–Ω!_', parse_mode='markdown')
################################################################################################################################################################################################
#–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
################################################################################################################################################################################################
####                                                                                      Foresti 2020                                                                                      ####
################################################################################################################################################################################################
